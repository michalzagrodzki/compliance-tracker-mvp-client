import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import type { AuditReport } from '../../types';
import { Button } from '@/components/ui/button';
import { Settings, User } from 'lucide-react';
import { formatDate } from '@/lib/documents';

export default function ReportDetails({ report }: { report: AuditReport }) {
  const [showTechnicalDetails, setShowTechnicalDetails] = useState(false);

  return (
    <Card>
      <CardHeader>
        <CardTitle className="text-lg">Report Details</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <h4 className="font-medium text-sm text-muted-foreground">Report ID</h4>
          <p className="text-xs font-mono bg-muted p-2 rounded break-all">{report.id}</p>
        </div>
        <div className="space-y-2">
          <h4 className="font-medium text-sm text-muted-foreground">User ID</h4>
          <div className="flex items-center space-x-2">
            <User className="h-4 w-4 text-muted-foreground" />
            <span className="text-xs font-mono">{report.user_id}</span>
          </div>
        </div>
        <div className="space-y-2">
          <h4 className="font-medium text-sm text-muted-foreground">Export Formats</h4>
          <div className="flex flex-wrap gap-1">
            {report.export_formats.map((format, idx) => (
              <span key={idx} className="px-2 py-1 text-xs bg-muted text-muted-foreground rounded border">
                {format.toUpperCase()}
              </span>
            ))}
          </div>
        </div>
        <div className="space-y-2">
          <h4 className="font-medium text-sm text-muted-foreground">Auto Generated</h4>
          <div className="flex items-center space-x-2">
            <div className={`h-2 w-2 rounded-full ${report.auto_generated ? 'bg-blue-500' : 'bg-gray-300'}`} />
            <span className="text-sm">{report.auto_generated ? 'Yes' : 'No'}</span>
          </div>
        </div>
        <Button variant="ghost" size="sm" className="w-full text-muted-foreground" onClick={() => setShowTechnicalDetails(!showTechnicalDetails)}>
          <Settings className="h-4 w-4 mr-2" />
          {showTechnicalDetails ? 'Hide' : 'Show'} Technical Details
        </Button>
        {showTechnicalDetails && (
          <div className="space-y-3 pt-3 border-t">
            <div className="space-y-2">
              <h4 className="font-medium text-xs text-muted-foreground">Session ID</h4>
              <p className="text-xs font-mono bg-muted p-2 rounded break-all">{report.audit_session_id}</p>
            </div>
            <div className="space-y-2">
              <h4 className="font-medium text-xs text-muted-foreground">Created</h4>
              <p className="text-xs text-muted-foreground">{formatDate(report.created_at)}</p>
            </div>
            <div className="space-y-2">
              <h4 className="font-medium text-xs text-muted-foreground">Updated</h4>
              <p className="text-xs text-muted-foreground">{formatDate(report.updated_at)}</p>
            </div>
            {report.generated_by && (
              <div className="space-y-2">
                <h4 className="font-medium text-xs text-muted-foreground">Generated By</h4>
                <p className="text-xs font-mono">{report.generated_by}</p>
              </div>
            )}
            {report.reviewed_by && (
              <div className="space-y-2">
                <h4 className="font-medium text-xs text-muted-foreground">Reviewed By</h4>
                <p className="text-xs font-mono">{report.reviewed_by}</p>
              </div>
            )}
            {report.approved_by && (
              <div className="space-y-2">
                <h4 className="font-medium text-xs text-muted-foreground">Approved By</h4>
                <p className="text-xs font-mono">{report.approved_by}</p>
              </div>
            )}
          </div>
        )}
      </CardContent>
    </Card>
  );
}
